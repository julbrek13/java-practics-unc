#BlueJ class context
comment0.params=
comment0.target=Empresa()
comment0.text=\n\ Constructor.\ Inicializa\ la\ lista\ de\ clientes\ y\ medidores\ administrados\ por\ la\ Empresa\n\ Inicializa\ el\ mapa\ de\ medidores\ asociados\ a\ clientes\n
comment1.params=
comment1.target=java.util.List\ getClientes()
comment1.text=\n\ \n\ @return\ la\ lista\ de\ Clientes\ de\ la\ empresa\n
comment10.params=nombreCliente
comment10.target=boolean\ bajaCliente(java.lang.String)
comment10.text=\n\ Remueve\ de\ la\ lista\ de\ clientes\ administrados\ al\ cliente\n\ cuyo\ nombre\ es\ el\ que\ se\ especifica\ como\ parametro.\n\ \n\ Retorna\ true\ si\ lo\ pudo\ eliminar,\ false\ si\ no\ existe\ ning\uFFFDn\ \n\ cliente\ administrado\ con\ ese\ nombre\n\ \n\ @param\ nombreCliente\n\ @return\ true\ si\ se\ pudo\ dar\ la\ baja,\ false\ si\ no\ existia\ cliente\ con\ el\ nombre\ especificado\n
comment2.params=
comment2.target=java.util.List\ getMedidoresAdministrados()
comment2.text=\n\ \n\ @return\ la\ lista\ de\ medidores\ administrados\ por\ la\ empresa\n
comment3.params=
comment3.target=java.util.Map\ getMapaAsociaciones()
comment3.text=\n\ Obtiene\ el\ mapa\ da\ asociaciones\ cliente\ -\ medidor\n\ \n\ @return\ el\ mapa\ de\ asociacioens\ de\ cliente-medidor\n
comment4.params=nombre
comment4.target=Cliente\ getCliente(java.lang.String)
comment4.text=\n\ Devuelve\ el\ cliente\ de\ la\ empresa\ con\ el\ nombre\ especificado.\ \n\ No\ se\ distingue\ may\uFFFDsculas\ o\ min\uFFFDsculas,\ es\ indistinto\ especificar\ "JUAN\ PEREZ"\n\ o\ "juan\ Perez"\ como\ argumento.\ Adem\uFFFDs,\ deben\ eliminarse\ los\ espacios\ prefijos\ o\ sufijos.\ \n\ @param\ nombre\ el\ nombre\ del\ cliente\ a\ buscar\n\ @return\ el\ cliente\ encontrado,\ o\ null\ en\ caso\ de\ no\ existir\ el\ cliente\ entre\ los\ clientes\ de\ la\ empresa\n\ \n
comment5.params=tipo\ pos
comment5.target=Medidor\ nuevoMedidor(TipoMedidor,\ CoordenadaGPS)
comment5.text=\n\ Crea\ un\ nuevo\ medidor\ del\ tipo\ y\ con\ la\ ubicaci\uFFFDn\ especificada,\ y\ lo\ agrega\n\ a\ la\ lista\ de\ medidores\ administrados\ por\ la\ Empresa\n\ \n\ @param\ tipo\ el\ TipoMedidor\ (DOMICILIARIO/COMERCIAL)\n\ @param\ pos\ las\ coordenadas\ donde\ se\ ubicar\uFFFD\ el\ nuevo\ medidor\n\ @return\ el\ medidor\ creado\n
comment6.params=nombre
comment6.target=Cliente\ nuevoCliente(java.lang.String)
comment6.text=\n\ Crea\ un\ nuevo\ cliente\ con\ el\ nombre\ especificado\ \ y\ lo\ agrega\ a\ la\ lista\ de\ clientes\ de\ la\ empresa\n\ Si\ en\ la\ lista\ de\ clientes\ de\ la\ empresa\ existe\ un\ cliente\ con\ ese\ nombre,\ lanza\ una\ exception.\n\ @param\ nombre\ el\ nombre\ del\ nuevo\ cliente\ a\ crear\n\ @return\ el\ Cliente\ creado\n\ @throws\ IllegalStateException\ si\ ya\ existe\ un\ cliente\ con\ ese\ nombre\ en\ la\ empresa\n
comment7.params=c\ m
comment7.target=void\ asociarMedidorACliente(Cliente,\ Medidor)
comment7.text=\n\ Asocia\ el\ medidor\ al\ cliente.\n\ Registra\ en\ el\ mapa\ de\ clientes\ la\ relaci\uFFFDn\ (<nombre_del_cliente>,<descripcion_medidor>)\n\ (cliente.getNombre(),\ medidor.toString())\n\ \n\ ej.\ ("juan\ perez",\ "SN_123")\n\ \n\ Si\ el\ cliente\ ya\ tiene\ un\ medidor\ asociado,\ lanza\ una\ exception\n\ \t\ *\ \t\n\ @param\ c\ el\ cliente\ al\ cual\ asociar\ el\ medidor\n\ @param\ m\ el\ medidor\ \n\ @throws\ IllegalStateException\ si\ el\ medidor\ no\ puede\ asociarse\ al\ cliente\ (por\ ejemplo,\ si\ ya\ tiene\ un\ medidor\ asociado)\n
comment8.params=c
comment8.target=void\ disociarMedidorDeCliente(Cliente)
comment8.text=\n\ Remueve\ el\ medidor\ del\ cliente,\n\ Elimina\ del\ mapa\ de\ clientes\ la\ relaci\uFFFDn\ (<nombre_del_cliente>,<descripcion_medidor>)\n\ \n\ @param\ c\ el\ cliente\ sobre\ el\ que\ desasociar\n
comment9.params=serialNumber
comment9.target=boolean\ bajaMedidor(int)
comment9.text=\n\ Remueve\ de\ la\ lista\ de\ medidores\ administrados\ al\ medidor\n\ cuyo\ serial\ number\ es\ el\ que\ se\ especifica\ como\ parametro.\n\ \n\ Retorna\ true\ si\ lo\ pudo\ eliminar,\ false\ si\ no\ existe\ ning\uFFFDn\ \n\ medidor\ administrado\ con\ ese\ serial\ number\n\ \n\ @param\ serialNumber\n\ @return\ true\ si\ se\ pudo\ dar\ la\ baja,\ false\ si\ no\ existia\ medidor\ con\ el\ serial\ number\ especificado\n
numComments=11
