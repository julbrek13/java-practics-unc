#BlueJ class context
comment0.params=maxX\ maxY
comment0.target=Mapa(int,\ int)
comment0.text=\r\n\ Inicializa\ el\ mapa.\ \r\n\ Establece\ los\ limites\ del\ mapa.\ los\ valores\ maximos\ de\ x\ e\ y\ deben\ ser\ mayores\ o\ iguales\ a\ 1.\r\n\ Establece\ la\ posicion\ actual\ en\ la\ coordenada\ 0,0\r\n\ Establece\ el\ docodificador\ por\ defecto.\r\n\ \r\n
comment1.params=p
comment1.target=boolean\ agregarPunto(PuntoInteres)
comment1.text=\r\n\ Agrega\ un\ punto\ de\ Interes\ al\ Mapa.\r\n\ \r\n\ @param\ p\ El\ punto\ de\ interes\r\n\ @return\ 'false'\ cuando\ el\ punto\ es\ null,\ su\ Id\ es\ null\ o\ est\u00E1\ fuera\ de\ los\ limites\ del\ mapa,\ \r\n\ y\ 'true'\ si\ se\ pudo\ agregar\ el\ punto\ al\ mapa.\r\n
comment2.params=idPunto
comment2.target=int\ getDistanciaCuadratica(java.lang.String)
comment2.text=\ \r\n\ Devuelve\ el\ cuadrado\ de\ la\ distancia\ de\ la\ posici\u00F3n\ actual\ en\ el\ mapa\ al\ punto\ pasado\ como\ argumento.\r\n\ Lanza\ una\ PuntoDesconocidoException\ cuando\ el\ punto\ no\ est\u00E1\ en\ el\ mapa\ o\ su\ id\ es\ nulo\r\n\ \r\n\ @param\ idPunto\ El\ ID\ del\ punto\ contra\ el\ cual\ se\ quiere\ calcular\ la\ distancia\ cuadrada\r\n\ @return\ el\ cuadrado\ de\ la\ distancia\ del\ punto\ actual\ al\ punto\ de\ interes\r\n\ @throws\ PuntoDesconocidoException\ \r\n
comment3.params=
comment3.target=PuntoInteres\ puntoMasCercano()
comment3.text=\r\n\ Devuelve\ el\ punto\ de\ inter\u00E9s\ m\u00E1s\ cercano\ a\ la\ posici\u00F3n\ actual,\ o\ null\ si\ no\ pudo\ encontrar\ ning\u00FAn\ punto\ de\ interes.\r\n\ \r\n\ @return\ PuntoInteres\ el\ punto\ de\ Interpes\ m\u00E1s\ cercano\r\n
comment4.params=idPunto
comment4.target=void\ borrarPunto(java.lang.String)
comment4.text=\r\n\ Borra\ un\ punto\ del\ mapa\ por\ su\ id\r\n\ \r\n\ @param\ idPunto\ el\ ID\ del\ punto\ que\ se\ quiere\ eliminar\ del\ mapa\r\n\ @throws\ PuntoDesconocidoException\ cuando\ no\ existe\ el\ punto\ o\ el\ id\ es\ nulo\r\n
comment5.params=
comment5.target=void\ borrarTodo()
comment5.text=\r\n\ Borra\ todos\ los\ puntos\ del\ mapa\r\n
comment6.params=tipo
comment6.target=java.util.List\ getPuntosDeInteresPorTipo(Tipo)
comment6.text=\r\n\ Devuelve\ una\ lista\ de\ Puntos\ de\ Interes\ por\ Tipo\r\n\ @param\ tipo\ El\ tipo\ de\ punto\ de\ interes\ a\ listar\r\n\ @return\ la\ lista\ de\ puntos\ de\ interes\r\n\r\n
comment7.params=
comment7.target=Coordenada\ getUbicacion()
comment7.text=\r\n\ Devuelve\ la\ ubicaci\u00F3n\ actual\ en\ el\ mapa\r\n\ @return\ la\ coordenada\ de\ la\ ubicaci\u00F3n\ actual\r\n
comment8.params=c
comment8.target=void\ setUbicacion(Coordenada)
comment8.text=\r\n\ Establece\ la\ posicion\ Actual.\ Lanza\ una\ IllegalArgumentException\ cuando\ se\ setea\ una\ coordenada\r\n\ fuera\ de\ los\ rangos\ del\ mapa\r\n\ \r\n\ @param\ Coordenada\ la\ cordenada\ de\ la\ posicion\ que\ se\ quiere\ establece\r\n\ @throws\ IllegalArgumentException\ cuando\ se\ setea\ una\ coordenada\r\n\ fuera\ de\ los\ rangos\ del\ mapa\r\n\ \r\n
comment9.params=direccion
comment9.target=void\ mover(java.lang.String)
comment9.text=\r\n\ Realiza\ un\ movimiento\ en\ la\ posici\u00F3n\ actual\ en\ el\ mapa\ de\ acuerdo\ a\ la\ direcci\u00F3n\ pasada\r\n\ como\ argumento.\ La\ direcci\u00F3n\ es\ decodificada\ por\ el\ decodificador\ actual\r\n\ \r\n\ @param\ String\ la\ direcci\u00F3n\ (codificada)\ hacia\ donde\ moverse\ en\ el\ mapa\r\n\ \r\n
numComments=10
